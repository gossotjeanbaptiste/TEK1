#!/usr/bin/env python3
from csv import *
from math import *

def parse_data(file_path, country_code):
    with open(file_path, mode = 'r') as file:
        reader = DictReader(file, delimiter=';')
        data = [row for row in reader if row['Country Code'] == country_code]
        years = list(range(1960, 2018))
        populations = [int(row[str(year)]) for year in years for row in data]
    return {'Year': years, 'Population': populations}

def compute_sums(data):
    X = data['Year']
    Y = data['Population']
    sum_X = sum(X)
    sum_Y = sum(Y)
    sum_X2 = sum(x**2 for x in X)
    sum_Y2 = sum(y**2 for y in Y)
    sum_XY = sum(x * y for x, y in zip(X, Y))
    return {
        'sum_X': sum_X,
        'sum_Y': sum_Y,
        'sum_X2': sum_X2,
        'sum_Y2': sum_Y2,
        'sum_XY': sum_XY,
    }

def linear_regression(data):
    X = data['Year']
    Y = data['Population']
    N = len(X)

    sum_X = sum(X)
    sum_Y = sum(Y)
    sum_X2 = sum(x**2 for x in X)
    sum_XY = sum(x * y for x, y in zip(X, Y))

    a = (N * sum_XY - sum_X * sum_Y) / (N * sum_X2 - sum_X**2)
    b = (sum_Y - a * sum_X) / N

    Y_pred = [a * x + b for x in X]
    residuals = [y - y_pred for y, y_pred in zip(Y, Y_pred)]

    rmsd = sqrt(sum(res**2 for res in residuals) / N)

    total_variance = sum((y - sum_Y / N)**2 for y in Y)
    explained_variance = sum((y_pred - sum_Y / N)**2 for y_pred in Y_pred)
    correlation_coefficient = explained_variance / total_variance

    return a, b, rmsd, correlation_coefficient, Y_pred

def predict_population(a, b, year):
    return a * year + b

if __name__ == "__main__":
    file_path = "105demography_data.csv"
    country_code = "EUU"

    data = parse_data(file_path, country_code)

    sums = compute_sums(data)
    print("Sums:", sums)

    a, b, rmsd, r, Y_pred = linear_regression(data)
    print(f"Linear regression coefficients: a = {a}, b = {b}")
    print(f"Root-mean-square deviation: {rmsd}")
    print(f"Coefficient of correlation: {r}")

    pop_2050 = predict_population(a, b, 2050)
    print(f"Predicted population in 2050: {pop_2050}")
