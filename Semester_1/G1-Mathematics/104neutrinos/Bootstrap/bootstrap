#!/usr/bin/env python3
from math import *
from sys import *


def arithmetics_mean(tab: list):
    sum = 0
    n = len(tab)
    for i in range(n):
        sum += tab[i]
    sum = 1/n * sum
    return sum


def sqrt_mean(tab: list):
    sum = 0
    n = len(tab)
    for i in range(n):
        sum += tab[i]**2
    sum = sqrt(1/n * sum)
    return sum


def harmonic_mean(tab: list):
    sum = 0
    n = len(tab)
    for i in range(n):
        sum += 1 / tab[i]
    return n / sum


def variance(tab: list):
    mean = arithmetics_mean(tab)
    sum = 0
    n = len(tab)
    for i in range(n):
        sum += (tab[i] - mean) ** 2
    return sum / n


def standard_deviation(tab: list):
    return sqrt(variance(tab))


def update_arithmetics_mean(tab: list, new_value: float):
    n = len(tab)
    current_mean = arithmetics_mean(tab)
    updated_mean = (current_mean * n + new_value) / (n + 1)
    return updated_mean


def update_sqrt_mean(tab: list, new_value: float):
    n = len(tab)
    current_sqrt_mean = sqrt_mean(tab)
    updated_sqrt_mean = sqrt(
        (current_sqrt_mean**2 * n + new_value**2) / (n + 1))
    return updated_sqrt_mean

def update_harmonic_mean(tab: list, new_value: float):
    n = len(tab)
    current_harmonic_mean = harmonic_mean(tab)
    updated_harmonic_mean = (n + 1) / (n / current_harmonic_mean + 1 / new_value)
    return updated_harmonic_mean