#!/usr/bin/env python3

from math import *
from sys import *


def vector1(x1, y1, z1):
    return [x1, y1, z1]


def vector2(x2, y2, z2):
    return [x2, y2, z2]


def subtract_vectors(v1, v2):
    return [v2[0] - v1[0], v2[1] - v1[1], v2[2] - v1[2]]


def multiply_vector(v, scalar):
    return [v[0] * scalar, v[1] * scalar, v[2] * scalar]


def vector_magnitude(v):
    return sqrt(v[0]**2 + v[1]**2 + v[2]**2)


def dot_product(v1, v2):
    return ((v1[0] * v2[0]) + (v1[1] * v2[1]) + (v1[2] * v2[2]))


def calculate_incidence_angle(v):
    normal = [0, 0, 1]
    dot_prod = dot_product(v, normal)
    magnitude_v = vector_magnitude(v)
    if magnitude_v == 0:
        return 0
    angle = asin(dot_prod/vector_magnitude(v))
    return degrees(angle)


def main(x1, y1, z1, x2, y2, z2, n, v1, v2, velocity):
    print(f"The velocity vector of the ball is:")
    print(f"({velocity[0]:.2f}, {velocity[1]:.2f}, {velocity[2]:.2f})")

    new_coords = [v1[0] + velocity[0] * n, v1[1] +
                  velocity[1] * n, v1[2] + velocity[2] * n]

    print(f"At time t + {n}, ball coordinates will be:")
    print(f"({new_coords[0]:.2f}, {new_coords[1]:.2f}, {new_coords[2]:.2f})")

    if velocity[2] != 0:
        time_to_hit = -v1[2] / velocity[2]
        if time_to_hit >= 0:
            incidence_angle = calculate_incidence_angle(velocity)
            print(f"The incidence angle is:")
            print(f"{incidence_angle:.2f} degrees")
        else:
            print("The ball won't reach the paddle.")
    else:
        print("The ball won't reach the paddle.")


x1 = float(argv[1])
y1 = float(argv[2])
z1 = float(argv[3])
x2 = float(argv[4])
y2 = float(argv[5])
z2 = float(argv[6])
n = int(argv[7])
v1 = vector1(x1, y1, z1)
v2 = vector2(x2, y2, z2)
velocity = subtract_vectors(v1, v2)

if __name__ == '__main__':
    main(x1, y1, z1, x2, y2, z2, n, v1, v2, velocity)
